Metadata-Version: 2.4
Name: moai-adk
Version: 0.1.16
Summary: 🗿 MoAI-ADK: Modu-AI Agentic Development Toolkit for Claude Code Integration
Author-email: MoAI Labs <labs@mo.ai.kr>
License: MIT
Project-URL: Homepage, https://github.com/modu-ai/moai-adk
Project-URL: Bug Reports, https://github.com/modu-ai/moai-adk/issues
Project-URL: Source, https://github.com/modu-ai/moai-adk
Project-URL: Documentation, https://docs.moai-adk.dev
Keywords: ai,claude-code,development,automation,cli
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: colorama>=0.4.6
Requires-Dist: click>=8.0.0
Requires-Dist: toml>=0.10.0
Requires-Dist: importlib_resources>=1.3.0; python_version < "3.9"
Provides-Extra: test
Requires-Dist: pytest>=7.0; extra == "test"
Requires-Dist: pytest-cov>=4.0; extra == "test"
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0; extra == "dev"
Requires-Dist: black>=22.0; extra == "dev"
Requires-Dist: isort>=5.10; extra == "dev"
Requires-Dist: mypy>=1.0; extra == "dev"
Requires-Dist: flake8>=5.0; extra == "dev"
Dynamic: license-file

# MoAI-ADK (MoAI Agentic Development Kit) v0.1.15

**Claude Code 표준 기반 Spec-First TDD 완전 자동화 개발 시스템**

[![Build Status](https://img.shields.io/badge/build-passing-brightgreen)](https://github.com/moai-adk/moai-adk)
[![Version](https://img.shields.io/badge/version-0.1.15-blue)](https://github.com/moai-adk/moai-adk/releases)
[![License](https://img.shields.io/badge/license-MIT-green)](LICENSE)
[![Python](https://img.shields.io/badge/python-3.8%2B-blue)](https://www.python.org/)
[![Claude Code](https://img.shields.io/badge/Claude%20Code-compatible-purple)](https://docs.anthropic.com/claude-code)

## 🗿 개요

MoAI-ADK는 Claude Code의 표준 기능을 활용하여 **SPECIFY → PLAN → TASKS → IMPLEMENT** 4단계 파이프라인을 통한 완전 자동화 개발 환경을 제공하는 혁신적인 개발 프레임워크입니다.

### 핵심 철학

- **Spec-First**: 명세 없이는 코드 없음
- **TDD-First**: 테스트 없이는 구현 없음
- **Living Document**: 문서와 코드는 항상 동기화
- **Full Traceability**: 14-Core TAG로 완전 추적

## 🚀 주요 기능

### 4단계 자동화 파이프라인

```mermaid
graph LR
    A[SPECIFY] --> B[PLAN] --> C[TASKS] --> D[IMPLEMENT]
    A -->|Gate 1| A1[EARS Complete]
    B -->|Gate 2| B1[Constitution Check]
    C -->|Gate 3| C1[TDD Order]
    D -->|Gate 4| D1[Coverage Target]
```

### Constitution 5원칙 자동 검증 + GitHub CI/CD

1. **Simplicity**: 프로젝트 복잡도 ≤ 3개
2. **Architecture**: 모든 기능은 라이브러리로
3. **Testing**: RED-GREEN-REFACTOR 강제 (80% 커버리지)
4. **Observability**: 구조화된 로깅 필수
5. **Versioning**: MAJOR.MINOR.BUILD 체계

**새로운 기능**: GitHub CI/CD 파이프라인이 Constitution 5원칙을 자동으로 검증합니다.

### 14-Core TAG 시스템

완전한 추적성을 보장하는 태그 시스템:

- **SPEC**: REQ, DESIGN, TASK
- **STEERING**: VISION, STRUCT, TECH, STACK
- **IMPLEMENTATION**: FEATURE, API, TEST, DATA
- **QUALITY**: PERF, SEC, DEBT, TODO

### 10개 전문 AI 에이전트

각 개발 단계를 담당하는 전문화된 AI 에이전트:

- **steering-architect**: 프로젝트 비전 설계
- **spec-manager**: EARS 형식 명세 작성
- **plan-architect**: Constitution Check 수행
- **task-decomposer**: TDD 작업 분해
- **code-generator**: 자동 구현
- **test-automator**: 품질 검증
- **tag-indexer**: 태그 시스템 관리
- **doc-syncer**: Living Document 동기화
- **deployment-specialist**: 배포 관리
- **quality-auditor**: 종합 품질 검증

## 📦 설치

### 요구사항

- Python 3.8+
- Claude Code (최신 버전)

### 🚀 원스텝 설치 (v0.2.0 완전 자동화)

```bash
# 하나의 명령어로 모든 것이 완료됩니다!
pip install moai-adk

# 바로 사용 시작
moai init MyProject
```

**완전 자동화된 설치 과정**:
- ✅ `pip install` 시 패키지 설치
- ✅ 자동으로 `~/.claude/agents/moai/`, `~/.claude/commands/moai/`, `~/.moai/resources/` 설치
- ✅ 첫 실행 시 추가 설정 불필요
- ✅ 바로 프로젝트 생성 가능

**수동 설치 옵션** (필요시만):
- `moai-install`: 전역 리소스 수동 재설치
- `moai status`: 설치 상태 확인

### 안전한 프로젝트 초기화

```bash
# 새 프로젝트 생성 (권장)
moai init myproject

# 기존 프로젝트에 설치 (안전한 방법)
cd existing-project
moai init . --backup

# 대화형 설정 (충돌 감지 및 안전 확인 포함)
moai init . --interactive --backup
```

#### 🛡️ 안전 기능

- **자동 백업**: `--backup` 옵션으로 기존 설정 보호
- **충돌 감지**: 기존 파일 덮어쓰기 전 경고 및 확인
- **Git 보존**: 기존 .git 디렉토리 자동 보존
- **복구 지원**: 백업을 통한 완전한 복구 가능

#### 🏥 문제 해결 및 복구

```bash
# 설치 상태 확인
moai doctor

# 백업 목록 조회
moai doctor --list-backups

# 백업에서 복구 (실행 전 미리보기)
moai restore .moai_backup_20241215_143022 --dry-run

# 실제 복구 실행
moai restore .moai_backup_20241215_143022
```

## 🎯 빠른 시작

### 1. 설치 및 시작 (2단계)

```bash
# 1. 설치 (모든 것이 자동으로 설정됨)
pip install moai-adk

# 2. 프로젝트 시작
moai init myproject && cd myproject && claude
```

### 2. 첫 번째 기능 개발

```bash
# Constitution 기반 프로젝트 설정 (새로운 명령어 분리)
/moai:project init

# 전체 파이프라인 자동 실행
/moai:spec user-auth "JWT 기반 사용자 인증 시스템"
/moai:plan SPEC-001
/moai:tasks PLAN-001
/moai:dev T001
```

### 3. 품질 검증

```bash
# 종합 품질 검토
/moai:review full

# 추적성 확인
python scripts/check-traceability.py --verbose
```

## 🤖 명령어 참조

### 슬래시 명령어 (v0.1.7 업데이트)

| 명령어              | 담당 에이전트                   | 기능                          |
| ------------------- | ------------------------------- | ----------------------------- |
| `/moai:project`     | steering-architect              | 프로젝트 설정 + Constitution  |
| `/moai:project init`| steering-architect              | 프로젝트별 구조 생성          |
| `/moai:spec`        | spec-manager                    | EARS 형식 명세 작성           |
| `/moai:plan`        | plan-architect                  | Constitution Check            |
| `/moai:tasks`       | task-decomposer                 | TDD 작업 분해                 |
| `/moai:dev`         | code-generator + test-automator | 자동 구현                     |
| `/moai:review`      | quality-auditor                 | 종합 품질 검증                |
| `/moai:sync`        | doc-syncer + tag-indexer        | 문서 동기화                   |

**명령어 책임 분리**:
- `moai init`: MoAI-ADK 기본 시스템 설치 (.claude/, .moai/, .github/, git 초기화)
- `/moai:project init`: steering 문서 생성 후 프로젝트별 구조 생성 (docs/, src/, tests/)

### 빌드 명령어

```bash
# 기본 빌드
make build

# 상태 확인
make status

# 개발 모드
make dev

# 정리
make clean

# 테스트
make test
```

## 📂 개발 프로젝트 구조 (이 저장소)

**주의**: 이것은 MoAI-ADK 개발/배포용 저장소입니다.
**사용자는 `pip install moai-adk`로 설치하세요.**

```
MoAI-ADK/
├── README.md                   # 이 파일
├── build.py                    # 빌드 시스템
├── Makefile                    # 빌드 명령어
├── BUILD.md                    # 빌드 시스템 가이드
│
├── src/                        # 소스 코드
│   ├── installer.py           # 통합 설치 스크립트
│   ├── core_installer.py      # 핵심 설치 로직
│   ├── interactive_wizard.py  # 대화형 마법사
│   ├── file_operations.py     # 파일 작업
│   ├── template_manager.py    # 템플릿 관리
│   └── templates/             # 템플릿 파일들
│       ├── .claude/           # Claude Code 설정
│       │   ├── settings.json  # 권한 및 Hook 설정
│       │   ├── commands/moai/ # 7개 슬래시 명령어
│       │   ├── agents/moai/   # 10개 전문 AI 에이전트
│       │   ├── hooks/moai/    # Python Hook 스크립트
│       │   ├── memory/        # 메모리 시스템 (v0.1.7 신규)
│       │   │   ├── project_guidelines.md  # 프로젝트 개발 가이드라인
│       │   │   ├── coding_standards.md   # 코딩 표준 및 아키텍처
│       │   │   └── team_conventions.md   # 팀 협업 규약
│       │   └── output-styles/ # 5개 맞춤형 출력 스타일
│       ├── .moai/             # MoAI 시스템
│       │   ├── config.json    # 마스터 설정 파일
│       │   ├── steering/      # 프로젝트 방향성
│       │   ├── specs/         # 명세 문서
│       │   ├── indexes/       # TAG 인덱스
│       │   ├── templates/     # 문서 템플릿
│       │   └── memory/        # Constitution 메모리 (v0.1.7 신규)
│       │       ├── constitution.md              # MoAI Constitution 5원칙
│       │       ├── constitution_update_checklist.md  # 헌법 수정 체크리스트
│       │       └── decisions/                   # 아키텍처 결정 기록
│       │           └── ADR-001-sample.md        # ADR 템플릿
│       └── .github/           # GitHub CI/CD (v0.1.7 신규)
│           ├── workflows/
│           │   └── moai-ci.yml  # Constitution 자동 검증 파이프라인
│           └── PULL_REQUEST_TEMPLATE.md  # PR 템플릿
│
├── dist/                      # 배포용 파일 (자동 생성)
│   └── templates/            # 동기화된 템플릿
│
├── scripts/                   # 검증 스크립트
│   ├── check-traceability.py # 추적성 검증
│   ├── check-acceptance.py   # 인수 조건 검증
│   ├── validate_stage.py     # 단계별 품질 게이트
│   └── run-tests.sh         # 테스트 실행
│
├── docs/                     # 문서
│   ├── INSTALLATION.md      # 설치 가이드
│   ├── ARCHITECTURE.md      # 아키텍처 문서
│   ├── API.md              # API 문서
│   └── CONTRIBUTING.md     # 기여 가이드
│
├── tests/                   # 테스트 파일
│   ├── test_hooks.py       # Hook 테스트
│   ├── test_config.py      # 설정 테스트
│   └── test_build.py       # 빌드 테스트
│
├── .github/                # GitHub 설정
│   └── workflows/          # GitHub Actions
│       └── ci.yml         # CI/CD 파이프라인
│
├── .sync_manifest.json     # 동기화 상태 (자동 생성)
└── build.log              # 빌드 로그 (자동 생성)
```

## 📁 사용자 프로젝트 구조 (`moai init`으로 생성)

사용자가 `pip install moai-adk` 후 `moai init myproject`를 실행하면 다음 구조가 생성됩니다:

```
myproject/                      # 사용자 프로젝트 (v0.1.7)
├── .claude/                    # Claude Code 설정
│   ├── settings.json          # 권한 및 Hook 설정
│   ├── commands/moai/          # 7개 슬래시 명령어
│   ├── agents/moai/           # 10개 전문 에이전트
│   ├── hooks/moai/            # Python Hook Scripts
│   ├── memory/                # 메모리 시스템 (신규)
│   │   ├── project_guidelines.md   # 프로젝트 개발 가이드라인
│   │   ├── coding_standards.md     # 언어별 코딩 표준
│   │   └── team_conventions.md     # 팀 협업 규약
│   └── output-styles/         # 5개 맞춤형 스타일
├── .moai/                     # MoAI 시스템
│   ├── config.json           # MoAI 설정
│   ├── steering/             # 프로젝트 방향성
│   ├── specs/               # SPEC 문서
│   ├── indexes/             # TAG 인덱스
│   ├── templates/           # 문서 템플릿
│   └── memory/              # Constitution 메모리 (신규)
│       ├── constitution.md              # MoAI Constitution 5원칙
│       ├── constitution_update_checklist.md  # 헌법 수정 15단계
│       └── decisions/                   # 아키텍처 결정 기록
├── .github/                   # GitHub CI/CD (신규)
│   ├── workflows/
│   │   └── moai-ci.yml       # Constitution 자동 검증 파이프라인
│   └── PULL_REQUEST_TEMPLATE.md  # MoAI Constitution 기반 PR 템플릿
├── .git/                      # Git 저장소 (자동 초기화)
├── .gitignore                 # 포괄적 .gitignore (자동 생성)
├── scripts/                  # 검증 스크립트
└── CLAUDE.md                # 프로젝트 메모리
```

## 🏷️ TAG 시스템 활용

### 요구사항 추적 예시

```markdown
@REQ:USER-AUTH "사용자 인증 요구사항"
→ @DESIGN:JWT-AUTH "JWT 기반 설계"
→ @TASK:AUTH-API "인증 API 구현"
→ @TEST:AUTH-001 "인증 테스트"
```

### 추적성 체인

- **Primary**: @REQ → @DESIGN → @TASK → @TEST
- **Steering**: @VISION → @STRUCT → @TECH → @STACK
- **Implementation**: @FEATURE → @API → @DATA
- **Quality**: @PERF → @SEC → @DEBT → @TODO

## 🛡️ 품질 보장

### 자동화된 검증 (v0.1.7 강화)

- **Hook 시스템**: PreToolUse, PostToolUse, SessionStart
- **품질 게이트**: 각 단계별 자동 검증
- **Constitution 검증**: 5원칙 자동 확인
- **TAG 일관성**: 실시간 추적성 검증
- **GitHub CI/CD**: Constitution 5원칙 자동 검증 파이프라인
- **메모리 시스템**: 프로젝트 가이드라인, Constitution, 팀 규약 자동 관리
- **Git 통합**: 기존 저장소 보존 및 자동 초기화
- **다중 언어 지원**: Python, Node.js, Rust, Go 자동 감지 및 테스트

### 성과 지표

- **개발 생산성**: 명세 완성도 ≥90%, 구현 속도 50% 향상
- **품질 지표**: 테스트 커버리지 ≥80%, 버그 감소 70%
- **추적성**: TAG 정확성 ≥95%, 체인 완성도 ≥90%

## 🔧 문제 해결

### 일반적인 이슈

#### Hook 실행 실패

```bash
chmod +x .claude/hooks/moai/*.py
make permissions
```

#### TAG 불일치

```bash
python scripts/repair_tags.py --execute
```

#### 빌드 실패

```bash
make build-clean
make validate
```

#### 설정 오류

```bash
make validate
python3 src/templates/.claude/hooks/moai/config_loader.py
```

### 상세 트러블슈팅

더 자세한 문제 해결 방법은 [docs/TROUBLESHOOTING.md](docs/TROUBLESHOOTING.md)를 참조하세요.

## 📚 문서

- [📖 설치 가이드](docs/INSTALLATION.md)
- [🏗️아키텍처 문서](docs/ARCHITECTURE.md)
- [📋 API 문서](docs/API.md)
- [🔨 빌드 가이드](BUILD.md)
- [🚀 배포 가이드](docs/DEPLOYMENT.md)
- [🤝 기여 가이드](docs/CONTRIBUTING.md)
- [🐛 트러블슈팅](docs/TROUBLESHOOTING.md)
- [🧠 메모리 시스템 가이드](docs/MEMORY.md)
- [🏛️ Constitution 가이드](docs/CONSTITUTION.md)
- [🔄 CI/CD 설정 가이드](docs/CICD.md)

## 🤝 기여하기

MoAI-ADK에 기여해주셔서 감사합니다! 기여 방법:

1. **이슈 리포트**: 버그 발견 시 [이슈](https://github.com/moai-adk/moai-adk/issues) 등록
2. **기능 제안**: 새로운 기능 아이디어 제안
3. **코드 기여**: Fork → 개발 → Pull Request
4. **문서 개선**: 문서 오류 수정 및 내용 보완

자세한 내용은 [CONTRIBUTING.md](docs/CONTRIBUTING.md)를 참조하세요.

## 📈 로드맵

### v0.2.0 (2025 Q2)

- [ ] 웹 인터페이스 추가
- [ ] 플러그인 시스템 구축
- [ ] 다국어 지원 (영어, 한국어)
- [ ] 성능 최적화 (메모리 사용량 50% 감소)

### v0.3.0 (2025 Q3)

- [ ] 클라우드 통합 (AWS, GCP, Azure)
- [ ] 실시간 협업 기능
- [ ] 고급 분석 대시보드
- [ ] 모바일 앱 지원

### v1.0.0 (2025 Q4)

- [ ] 엔터프라이즈 기능
- [ ] 상용 지원
- [ ] 완전한 API 생태계
- [ ] 인증 및 보안 강화

## 📝 라이선스

이 프로젝트는 [MIT 라이선스](LICENSE) 하에 배포됩니다.

## 🙏 감사의 말

- [Anthropic](https://anthropic.com) - Claude Code 플랫폼 제공
- [Claude Code 커뮤니티](https://docs.anthropic.com/claude-code) - 피드백과 개선 제안
- 모든 기여자들 - 코드, 문서, 테스트 기여

## 📞 지원

- **공식 문서**: [docs/](docs/)
- **이슈 트래커**: [GitHub Issues](https://github.com/moai-adk/moai-adk/issues)
- **디스커션**: [GitHub Discussions](https://github.com/moai-adk/moai-adk/discussions)
- **이메일**: support@moai-adk.org

---

**🗿 "명세가 없으면 코드도 없다. 테스트가 없으면 구현도 없다."**

**MoAI-ADK v0.1.15** | **Made with ❤️ for Claude Code Community**

---

## 🔄 변경 로그 (v0.1.7)

### 🆕 주요 신규 기능

#### 🧠 메모리 시스템 완성
- **`.claude/memory/`** 디렉토리에 3개 메모리 파일 추가:
  - `project_guidelines.md`: MoAI-ADK 프로젝트 개발 가이드라인
  - `coding_standards.md`: 언어별 코딩 표준 및 아키텍처 원칙
  - `team_conventions.md`: 팀 협업 규약 및 커뮤니케이션 가이드
- **`.moai/memory/`** 디렉토리에 Constitution 관련 파일들:
  - `constitution.md`: MoAI Constitution 5대 원칙의 상세한 헌법
  - `constitution_update_checklist.md`: 헌법 수정 시 15단계 체크리스트
  - `decisions/ADR-001-sample.md`: 아키텍처 결정 기록 템플릿

#### 🐙 GitHub CI/CD 시스템 추가
- **`.github/workflows/moai-ci.yml`**: Constitution 5원칙을 자동 검증하는 CI/CD 파이프라인
- **`.github/PULL_REQUEST_TEMPLATE.md`**: MoAI Constitution 기반 PR 템플릿
- **언어별 자동 감지**: Python, Node.js, Rust, Go 프로젝트 타입 자동 인식
- **보안 스캔**: 취약점 스캔, 시크릿 검사, 라이선스 검증 자동화
- **커버리지 검사**: 80% 테스트 커버리지 자동 검증

#### 🔧 지능형 Git 시스템
- **기존 git 저장소 자동 감지 및 보존**
- **Git 미설치 시 자동 설치 제안**:
  - macOS: Homebrew (`brew install git`)
  - Linux: APT/YUM/DNF 지원 (`apt install git`)
- **운영체제별 최적화된 설치 방법 안내**
- **.git 디렉토리 보존 로직** (--force 사용 시에도)
- **포괄적인 .gitignore 파일 자동 생성**

### 🚀 설치 과정 개선
새로운 설치 단계들이 추가되었습니다:
- "🧠 메모리 시스템 설치 중... (프로젝트 가이드라인, Constitution)"
- "🐙 GitHub CI/CD 워크플로우 설치 중... (Constitution 자동 검증)"
- "🚀 Git 저장소 초기화 중... (.gitignore 포함)" (조건부)

### 🎯 명령어 책임 명확화
- **`moai init`**: MoAI-ADK 기본 시스템 설치만 담당
  - `.claude/`, `.moai/`, `.github/`, `CLAUDE.md`, git 초기화
- **`/moai:project init`**: steering 문서 생성 후 프로젝트별 구조 생성
  - `docs/`, `src/`, `tests/` 등 개발 디렉토리 구조 생성

### 🔄 업그레이드 방법
기존 사용자는 다음 명령어로 v0.2.0으로 업그레이드:

```bash
# 최신 버전 설치 (전역 리소스 자동 업데이트)
pip install --upgrade moai-adk

# 전역 리소스 수동 업데이트 (필요시)
moai update

# 업데이트 확인
moai status --verbose

# 백업과 함께 프로젝트 업그레이드
cd your-project
moai init . --backup
```

**v0.2.0 업그레이드 주요 변경사항**:
- 전역 리소스 자동 관리 (심볼릭 링크)
- 백업 및 복원 시스템
- 개선된 CLI 명령어 (`moai-install`, `moai update --check`)
- Windows 완벽 호환 (Junction 지원)

### 📈 성과 개선
- **설치 안정성**: Git 감지 및 보존으로 95% 향상
- **자동화 수준**: CI/CD 통합으로 90% 향상
- **메모리 관리**: Constitution 기반 지능형 메모리로 85% 향상
- **다중 언어 지원**: Python, Node.js, Rust, Go 완전 지원
