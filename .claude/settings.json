{
  "permissions": {
    "defaultMode": "default",
    "allow": [
      "Task",
      "Write",
      "Read",
      "Edit",
      "MultiEdit",
      "Bash(git:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "WebFetch",
      "Grep",
      "Glob",
      "NotebookEdit",
      "TodoWrite",
      "WebSearch",
      "BashOutput",
      "KillBash"
    ],
    "deny": [
      "Bash(sudo:*)",
      "Edit(.env*)",
      "Read(.env*)",
      "Write(.env*)"
    ],
    "ask": [
      "Bash(npm install:*)",
      "Bash(pip install:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Write(*.config.*)",
      "Bash(npm publish:*)",
      "Bash(docker:*)",
      "Bash(kubectl:*)"
    ]
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write|Bash",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/moai/pre_write_guard.py",
            "timeout": 60
          }
        ]
      },
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/moai/constitution_guard.py"
          },
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/moai/tag_validator.py"
          }
        ]
      },
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/awesome/backup_before_edit.py",
            "description": "Backup files before editing"
          }
        ]
      },
      {
        "matcher": "Bash|WebFetch",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/moai/policy_block.py"
          }
        ]
      },
      {
        "matcher": "Task|Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/moai/context_selector.py",
            "timeout": 5,
            "description": "Recommend Top-K context files"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/awesome/auto_formatter.py",
            "description": "Smart code formatter"
          }
        ]
      },
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/awesome/auto_git_commit.py",
            "description": "Intelligent auto-commit"
          }
        ]
      },
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/awesome/test_runner.py",
            "description": "Run tests after code changes"
          }
        ]
      },
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/awesome/security_scanner.py",
            "description": "Security vulnerability scanner"
          }
        ]
      },
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/moai/post_stage_guard.py"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/moai/session_start_notice.py"
          }
        ]
      }
    ]
  },
  "mcpServers": {
    "memory": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-memory"],
      "settings": {
        "maxTokens": 20000,
        "apiVersion": "beta"
      }
    },
    "filesystem": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-filesystem"],
      "env": {
        "ALLOWED_DIRECTORIES": "${CLAUDE_PROJECT_DIR}",
        "MAX_MCP_OUTPUT_TOKENS": "20000"
      }
    }
  },
  "environmentVariables": {
    "MAX_MCP_OUTPUT_TOKENS": "20000",
    "CLAUDE_CODE_MAX_OUTPUT_TOKENS": "8192",
    "MOAI_PROJECT": "true"
  }
}
