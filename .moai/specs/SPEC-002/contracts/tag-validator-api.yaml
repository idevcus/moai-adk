# @API:POST-VALIDATE "TAG 검증 및 일관성 검사 API"
openapi: 3.0.3
info:
  title: TAG Validator API
  description: Validation and consistency checking API for 16-Core TAG system
  version: 1.0.0
  contact:
    name: MoAI-ADK Team
    url: https://github.com/goos/MoAI-ADK

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

paths:
  /validate/tags:
    post:
      summary: Validate TAG format and consistency
      description: Validates 16-Core TAG format and cross-references
      operationId: validateTags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        '200':
          description: Validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /validate/traceability:
    post:
      summary: Check TAG traceability chains
      description: Validates TAG connections from requirements to implementation
      operationId: validateTraceability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceabilityRequest'
      responses:
        '200':
          description: Traceability analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceabilityResponse'

  /validate/duplicates:
    get:
      summary: Find duplicate TAGs
      description: Identifies duplicate TAG identifiers across project
      operationId: findDuplicates
      parameters:
        - name: scope
          in: query
          description: Validation scope
          schema:
            type: string
            enum: [project, directory, file]
            default: project
        - name: path
          in: query
          description: Path to validate (for directory/file scope)
          schema:
            type: string
      responses:
        '200':
          description: Duplicate analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResponse'

  /validate/orphans:
    get:
      summary: Find orphaned TAGs
      description: Identifies TAGs without proper references or chains
      operationId: findOrphans
      responses:
        '200':
          description: Orphan analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrphanResponse'

  /validate/repair:
    post:
      summary: Auto-repair TAG issues
      description: Attempts automatic repair of common TAG issues
      operationId: repairTags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairRequest'
      responses:
        '200':
          description: Repair completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairResponse'

  /validate/conventions:
    post:
      summary: Check naming conventions
      description: Validates TAG naming follows 16-Core conventions
      operationId: validateConventions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConventionRequest'
      responses:
        '200':
          description: Convention check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConventionResponse'

components:
  schemas:
    ValidationRequest:
      type: object
      required:
        - tags
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagToValidate'
        strict_mode:
          type: boolean
          default: false
          description: Enable strict validation rules
        auto_fix:
          type: boolean
          default: false
          description: Attempt automatic fixes
        context:
          type: object
          properties:
            project_root:
              type: string
            validation_rules:
              type: array
              items:
                type: string

    TagToValidate:
      type: object
      required:
        - tag
        - file_path
      properties:
        tag:
          type: string
          description: TAG identifier to validate
        file_path:
          type: string
          description: Source file path
        line_number:
          type: integer
          description: Line number in source file
        context:
          type: string
          description: Surrounding code context

    ValidationResponse:
      type: object
      properties:
        validation_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [passed, failed, warning]
        total_tags:
          type: integer
        valid_tags:
          type: integer
        invalid_tags:
          type: integer
        warnings:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/ValidationResult'
        summary:
          $ref: '#/components/schemas/ValidationSummary'

    ValidationResult:
      type: object
      properties:
        tag:
          type: string
        file_path:
          type: string
        line_number:
          type: integer
        status:
          type: string
          enum: [valid, invalid, warning]
        issues:
          type: array
          items:
            $ref: '#/components/schemas/ValidationIssue'
        suggested_fix:
          type: string
        auto_fixable:
          type: boolean

    ValidationIssue:
      type: object
      properties:
        type:
          type: string
          enum: [format_error, naming_convention, category_mismatch, duplicate, orphan, broken_reference]
        severity:
          type: string
          enum: [error, warning, info]
        message:
          type: string
        rule:
          type: string
          description: Validation rule that triggered this issue
        evidence:
          type: array
          items:
            type: string

    ValidationSummary:
      type: object
      properties:
        coverage_percentage:
          type: number
          description: Percentage of files with proper TAGs
        traceability_score:
          type: number
          description: Traceability chain completeness score
        convention_compliance:
          type: number
          description: Naming convention compliance score
        most_common_issues:
          type: array
          items:
            type: object
            properties:
              issue_type:
                type: string
              count:
                type: integer
              percentage:
                type: number

    TraceabilityRequest:
      type: object
      properties:
        start_tags:
          type: array
          items:
            type: string
          description: Starting TAG identifiers for traceability check
        scope:
          type: string
          enum: [full, requirements_only, implementation_only]
          default: full
        max_depth:
          type: integer
          minimum: 1
          maximum: 10
          default: 5

    TraceabilityResponse:
      type: object
      properties:
        chains:
          type: array
          items:
            $ref: '#/components/schemas/TraceabilityChain'
        broken_chains:
          type: array
          items:
            $ref: '#/components/schemas/BrokenChain'
        orphaned_tags:
          type: array
          items:
            type: string
        coverage_report:
          $ref: '#/components/schemas/CoverageReport'

    TraceabilityChain:
      type: object
      properties:
        chain_id:
          type: string
        start_tag:
          type: string
        end_tag:
          type: string
        path:
          type: array
          items:
            $ref: '#/components/schemas/TagReference'
        completeness:
          type: number
          description: Chain completeness score (0-1)
        quality_score:
          type: number
          description: Overall chain quality score

    BrokenChain:
      type: object
      properties:
        start_tag:
          type: string
        break_point:
          type: string
        missing_links:
          type: array
          items:
            type: string
        suggested_fixes:
          type: array
          items:
            type: string

    TagReference:
      type: object
      properties:
        tag:
          type: string
        file_path:
          type: string
        line_number:
          type: integer
        relationship:
          type: string
          enum: [implements, references, depends_on, traces_to]

    CoverageReport:
      type: object
      properties:
        total_requirements:
          type: integer
        covered_requirements:
          type: integer
        coverage_percentage:
          type: number
        uncovered_areas:
          type: array
          items:
            type: string

    DuplicateResponse:
      type: object
      properties:
        duplicate_groups:
          type: array
          items:
            $ref: '#/components/schemas/DuplicateGroup'
        total_duplicates:
          type: integer
        suggested_resolutions:
          type: array
          items:
            $ref: '#/components/schemas/DuplicateResolution'

    DuplicateGroup:
      type: object
      properties:
        tag:
          type: string
        occurrences:
          type: array
          items:
            type: object
            properties:
              file_path:
                type: string
              line_number:
                type: integer
              context:
                type: string
        severity:
          type: string
          enum: [critical, warning, info]

    DuplicateResolution:
      type: object
      properties:
        duplicate_tag:
          type: string
        resolution_type:
          type: string
          enum: [rename, merge, remove]
        suggested_new_name:
          type: string
        confidence:
          type: number

    OrphanResponse:
      type: object
      properties:
        orphaned_tags:
          type: array
          items:
            $ref: '#/components/schemas/OrphanedTag'
        total_orphans:
          type: integer
        adoption_suggestions:
          type: array
          items:
            $ref: '#/components/schemas/AdoptionSuggestion'

    OrphanedTag:
      type: object
      properties:
        tag:
          type: string
        file_path:
          type: string
        line_number:
          type: integer
        orphan_type:
          type: string
          enum: [no_references, no_implementation, broken_chain]
        age_days:
          type: integer

    AdoptionSuggestion:
      type: object
      properties:
        orphan_tag:
          type: string
        suggested_parent:
          type: string
        confidence:
          type: number
        reasoning:
          type: string

    RepairRequest:
      type: object
      properties:
        repair_types:
          type: array
          items:
            type: string
            enum: [duplicates, orphans, naming, formatting, references]
        dry_run:
          type: boolean
          default: true
        scope:
          type: string
          enum: [project, directory, file]
          default: project
        target_path:
          type: string
        auto_confirm:
          type: boolean
          default: false

    RepairResponse:
      type: object
      properties:
        repair_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [completed, partial, failed]
        repairs_attempted:
          type: integer
        repairs_successful:
          type: integer
        repairs_failed:
          type: integer
        repair_actions:
          type: array
          items:
            $ref: '#/components/schemas/RepairAction'
        backup_created:
          type: boolean
        backup_path:
          type: string

    RepairAction:
      type: object
      properties:
        action_type:
          type: string
          enum: [rename, remove, add, modify]
        target_file:
          type: string
        old_value:
          type: string
        new_value:
          type: string
        status:
          type: string
          enum: [success, failed, skipped]
        error_message:
          type: string

    ConventionRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
        convention_set:
          type: string
          enum: [16_core, custom]
          default: 16_core
        custom_rules:
          type: array
          items:
            $ref: '#/components/schemas/ConventionRule'

    ConventionRule:
      type: object
      properties:
        rule_name:
          type: string
        pattern:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [error, warning, info]

    ConventionResponse:
      type: object
      properties:
        compliance_score:
          type: number
          description: Overall compliance score (0-1)
        violations:
          type: array
          items:
            $ref: '#/components/schemas/ConventionViolation'
        suggestions:
          type: array
          items:
            $ref: '#/components/schemas/ConventionSuggestion'

    ConventionViolation:
      type: object
      properties:
        tag:
          type: string
        rule_violated:
          type: string
        severity:
          type: string
        description:
          type: string
        suggested_fix:
          type: string

    ConventionSuggestion:
      type: object
      properties:
        current_tag:
          type: string
        suggested_tag:
          type: string
        reason:
          type: string
        confidence:
          type: number

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
            timestamp:
              type: string
              format: date-time

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []

tags:
  - name: validation
    description: TAG format and structure validation
  - name: traceability
    description: TAG relationship and chain validation
  - name: repair
    description: Automatic TAG issue repair