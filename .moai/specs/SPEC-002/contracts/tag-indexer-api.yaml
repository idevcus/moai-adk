# @API:POST-INDEX "TAG 인덱싱 및 검색 API"
openapi: 3.0.3
info:
  title: TAG Indexer API
  description: Indexing and search API for 16-Core TAG system
  version: 1.0.0
  contact:
    name: MoAI-ADK Team
    url: https://github.com/goos/MoAI-ADK

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

paths:
  /index/rebuild:
    post:
      summary: Rebuild complete TAG index
      description: Rebuilds the entire TAG index from source files
      operationId: rebuildIndex
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebuildRequest'
      responses:
        '200':
          description: Index rebuild completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexResponse'

  /index/update:
    post:
      summary: Update TAG index incrementally
      description: Updates the TAG index for specific files or changes
      operationId: updateIndex
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
      responses:
        '200':
          description: Index update completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexResponse'

  /index/search:
    get:
      summary: Search TAG index
      description: Searches for TAGs using various criteria
      operationId: searchTags
      parameters:
        - name: query
          in: query
          required: true
          description: Search query
          schema:
            type: string
        - name: category
          in: query
          description: Filter by TAG category
          schema:
            type: string
            enum: [SPEC, STEERING, IMPLEMENTATION, QUALITY]
        - name: type
          in: query
          description: Filter by TAG type
          schema:
            type: string
            enum: [REQ, DESIGN, TASK, VISION, STRUCT, TECH, ADR, FEATURE, API, TEST, DATA, PERF, SEC, DEBT, TODO]
        - name: status
          in: query
          description: Filter by status
          schema:
            type: string
            enum: [active, draft, deprecated]
        - name: limit
          in: query
          description: Maximum results to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Search completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'

  /index/stats:
    get:
      summary: Get index statistics
      description: Returns statistics about the TAG index
      operationId: getIndexStats
      responses:
        '200':
          description: Statistics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexStats'

  /index/export:
    get:
      summary: Export TAG index
      description: Exports the complete TAG index in various formats
      operationId: exportIndex
      parameters:
        - name: format
          in: query
          description: Export format
          schema:
            type: string
            enum: [json, csv, xml, yaml]
            default: json
        - name: include_metadata
          in: query
          description: Include metadata in export
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Export completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
            text/csv:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            application/yaml:
              schema:
                type: string

  /index/import:
    post:
      summary: Import TAG index
      description: Imports TAG index from external source
      operationId: importIndex
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRequest'
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                merge_strategy:
                  type: string
                  enum: [replace, merge, append]
      responses:
        '200':
          description: Import completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportResponse'

  /index/relationships:
    get:
      summary: Get TAG relationships
      description: Returns relationship graph for specified TAGs
      operationId: getRelationships
      parameters:
        - name: tag
          in: query
          required: true
          description: Root TAG identifier
          schema:
            type: string
        - name: depth
          in: query
          description: Relationship depth to traverse
          schema:
            type: integer
            minimum: 1
            maximum: 5
            default: 2
        - name: direction
          in: query
          description: Relationship direction
          schema:
            type: string
            enum: [both, incoming, outgoing]
            default: both
      responses:
        '200':
          description: Relationships retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipResponse'

components:
  schemas:
    RebuildRequest:
      type: object
      properties:
        source_path:
          type: string
          description: Root path to scan for TAGs
          default: "src/moai_adk"
        include_patterns:
          type: array
          items:
            type: string
          description: File patterns to include
          default: ["*.py"]
        exclude_patterns:
          type: array
          items:
            type: string
          description: File patterns to exclude
        force:
          type: boolean
          default: false
          description: Force rebuild even if index is current
        backup_existing:
          type: boolean
          default: true
          description: Create backup of existing index

    UpdateRequest:
      type: object
      required:
        - changes
      properties:
        changes:
          type: array
          items:
            $ref: '#/components/schemas/IndexChange'
        batch_id:
          type: string
          description: Batch identifier for grouping changes
        timestamp:
          type: string
          format: date-time
          description: Change timestamp

    IndexChange:
      type: object
      required:
        - operation
        - file_path
      properties:
        operation:
          type: string
          enum: [add, update, delete]
        file_path:
          type: string
        old_tags:
          type: array
          items:
            type: string
          description: Previous TAG identifiers
        new_tags:
          type: array
          items:
            type: string
          description: New TAG identifiers
        metadata:
          type: object
          description: Additional metadata for the change

    IndexResponse:
      type: object
      properties:
        operation_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [completed, failed, partial]
        duration_ms:
          type: integer
        files_processed:
          type: integer
        tags_indexed:
          type: integer
        errors:
          type: array
          items:
            $ref: '#/components/schemas/IndexError'
        performance_metrics:
          $ref: '#/components/schemas/IndexPerformance'

    IndexError:
      type: object
      properties:
        file_path:
          type: string
        error_type:
          type: string
          enum: [parse_error, permission_error, format_error]
        error_message:
          type: string
        line_number:
          type: integer
        recoverable:
          type: boolean

    IndexPerformance:
      type: object
      properties:
        files_per_second:
          type: number
        tags_per_second:
          type: number
        memory_usage_mb:
          type: number
        cpu_usage_percent:
          type: number
        index_size_mb:
          type: number

    SearchResponse:
      type: object
      properties:
        query:
          type: string
        total_results:
          type: integer
        returned_results:
          type: integer
        page_info:
          $ref: '#/components/schemas/PageInfo'
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagResult'
        facets:
          $ref: '#/components/schemas/SearchFacets'
        suggestions:
          type: array
          items:
            type: string

    TagResult:
      type: object
      properties:
        tag:
          type: string
        category:
          type: string
        type:
          type: string
        description:
          type: string
        file_path:
          type: string
        line_number:
          type: integer
        status:
          type: string
        created:
          type: string
          format: date-time
        last_modified:
          type: string
          format: date-time
        priority:
          type: integer
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/TagRelationship'
        score:
          type: number
          description: Search relevance score

    TagRelationship:
      type: object
      properties:
        related_tag:
          type: string
        relationship_type:
          type: string
          enum: [implements, references, depends_on, traces_to, blocks, related]
        strength:
          type: number
          description: Relationship strength (0-1)

    PageInfo:
      type: object
      properties:
        current_page:
          type: integer
        total_pages:
          type: integer
        has_next:
          type: boolean
        has_previous:
          type: boolean
        next_offset:
          type: integer
        previous_offset:
          type: integer

    SearchFacets:
      type: object
      properties:
        categories:
          type: object
          additionalProperties:
            type: integer
        types:
          type: object
          additionalProperties:
            type: integer
        statuses:
          type: object
          additionalProperties:
            type: integer
        file_extensions:
          type: object
          additionalProperties:
            type: integer

    IndexStats:
      type: object
      properties:
        index_version:
          type: string
        last_updated:
          type: string
          format: date-time
        total_tags:
          type: integer
        total_files:
          type: integer
        index_size_bytes:
          type: integer
        category_breakdown:
          type: object
          additionalProperties:
            type: integer
        status_breakdown:
          type: object
          additionalProperties:
            type: integer
        file_type_breakdown:
          type: object
          additionalProperties:
            type: integer
        health_metrics:
          $ref: '#/components/schemas/HealthMetrics'

    HealthMetrics:
      type: object
      properties:
        orphaned_tags:
          type: integer
        duplicate_tags:
          type: integer
        broken_references:
          type: integer
        missing_descriptions:
          type: integer
        health_score:
          type: number
          description: Overall index health score (0-1)

    ExportResponse:
      type: object
      properties:
        export_id:
          type: string
          format: uuid
        format:
          type: string
        size_bytes:
          type: integer
        record_count:
          type: integer
        data:
          oneOf:
            - type: object
            - type: string
        download_url:
          type: string
          description: URL for large exports
        expires_at:
          type: string
          format: date-time

    ImportRequest:
      type: object
      properties:
        source_data:
          oneOf:
            - type: object
            - type: string
        format:
          type: string
          enum: [json, csv, xml, yaml]
        merge_strategy:
          type: string
          enum: [replace, merge, append]
          default: merge
        validation_mode:
          type: string
          enum: [strict, lenient, skip]
          default: strict
        dry_run:
          type: boolean
          default: false

    ImportResponse:
      type: object
      properties:
        import_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [completed, failed, partial]
        records_processed:
          type: integer
        records_imported:
          type: integer
        records_skipped:
          type: integer
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        conflicts:
          type: array
          items:
            $ref: '#/components/schemas/ImportConflict'

    ValidationError:
      type: object
      properties:
        record_id:
          type: string
        field:
          type: string
        error_type:
          type: string
        message:
          type: string

    ImportConflict:
      type: object
      properties:
        tag:
          type: string
        conflict_type:
          type: string
          enum: [duplicate, format_mismatch, reference_conflict]
        existing_record:
          type: object
        imported_record:
          type: object
        resolution:
          type: string
          enum: [use_existing, use_imported, merge]

    RelationshipResponse:
      type: object
      properties:
        root_tag:
          type: string
        depth:
          type: integer
        total_relationships:
          type: integer
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/TagNode'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/TagEdge'
        graph_metrics:
          $ref: '#/components/schemas/GraphMetrics'

    TagNode:
      type: object
      properties:
        tag:
          type: string
        category:
          type: string
        type:
          type: string
        description:
          type: string
        file_path:
          type: string
        centrality_score:
          type: number
        connection_count:
          type: integer

    TagEdge:
      type: object
      properties:
        source_tag:
          type: string
        target_tag:
          type: string
        relationship_type:
          type: string
        strength:
          type: number
        bidirectional:
          type: boolean

    GraphMetrics:
      type: object
      properties:
        node_count:
          type: integer
        edge_count:
          type: integer
        average_degree:
          type: number
        clustering_coefficient:
          type: number
        diameter:
          type: integer

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
            timestamp:
              type: string
              format: date-time

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []

tags:
  - name: indexing
    description: TAG index management operations
  - name: search
    description: TAG search and query operations
  - name: relationships
    description: TAG relationship analysis