# @API:POST-SCAN "16-Core TAG 스캐닝 및 추출 API"
openapi: 3.0.3
info:
  title: TAG Scanner API
  description: Core scanning and extraction API for 16-Core TAG system
  version: 1.0.0
  contact:
    name: MoAI-ADK Team
    url: https://github.com/goos/MoAI-ADK

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

paths:
  /scan/files:
    post:
      summary: Scan multiple files for TAG extraction
      description: Scans Python files and extracts 16-Core TAG information
      operationId: scanFiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanRequest'
      responses:
        '200':
          description: Scan completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scan/directory:
    post:
      summary: Scan entire directory recursively
      description: Recursively scans directory for Python files and extracts TAGs
      operationId: scanDirectory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryScanRequest'
      responses:
        '200':
          description: Directory scan completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResponse'
        '400':
          description: Invalid directory path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scan/file/{file_path}:
    get:
      summary: Scan single file for TAGs
      description: Scans a specific Python file and returns TAG information
      operationId: scanSingleFile
      parameters:
        - name: file_path
          in: path
          required: true
          description: Relative path to the Python file
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_/.-]+\.py$'
      responses:
        '200':
          description: File scan completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileScanResult'
        '404':
          description: File not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scan/suggest-tags:
    post:
      summary: Suggest appropriate TAGs for files
      description: Analyzes file content and suggests appropriate 16-Core TAGs
      operationId: suggestTags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagSuggestionRequest'
      responses:
        '200':
          description: TAG suggestions generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagSuggestionResponse'

  /scan/status/{scan_id}:
    get:
      summary: Get scan progress status
      description: Returns the progress status of a long-running scan operation
      operationId: getScanStatus
      parameters:
        - name: scan_id
          in: path
          required: true
          description: Unique scan operation identifier
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Scan status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanStatusResponse'

components:
  schemas:
    ScanRequest:
      type: object
      required:
        - files
      properties:
        files:
          type: array
          items:
            type: string
          description: List of file paths to scan
          example: ["src/moai_adk/core/engine.py", "src/moai_adk/cli/main.py"]
        include_content:
          type: boolean
          default: false
          description: Whether to include file content in response
        dry_run:
          type: boolean
          default: false
          description: Preview mode without making changes

    DirectoryScanRequest:
      type: object
      required:
        - directory_path
      properties:
        directory_path:
          type: string
          description: Root directory path to scan
          example: "src/moai_adk"
        recursive:
          type: boolean
          default: true
          description: Whether to scan subdirectories
        include_patterns:
          type: array
          items:
            type: string
          description: File patterns to include
          example: ["*.py"]
        exclude_patterns:
          type: array
          items:
            type: string
          description: File patterns to exclude
          example: ["*__pycache__*", "*.pyc"]
        max_depth:
          type: integer
          minimum: 1
          maximum: 10
          description: Maximum directory depth to scan

    ScanResponse:
      type: object
      properties:
        scan_id:
          type: string
          format: uuid
          description: Unique scan operation identifier
        status:
          type: string
          enum: [completed, failed, in_progress]
          description: Scan operation status
        total_files:
          type: integer
          description: Total number of files scanned
        processed_files:
          type: integer
          description: Number of files successfully processed
        failed_files:
          type: integer
          description: Number of files that failed to process
        duration_ms:
          type: integer
          description: Scan duration in milliseconds
        results:
          type: array
          items:
            $ref: '#/components/schemas/FileScanResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ScanError'
        performance_metrics:
          $ref: '#/components/schemas/PerformanceMetrics'

    FileScanResult:
      type: object
      properties:
        file_path:
          type: string
          description: Relative path to the scanned file
        status:
          type: string
          enum: [success, error, skipped]
          description: File processing status
        existing_tags:
          type: array
          items:
            $ref: '#/components/schemas/TagInfo'
          description: TAGs found in the file
        suggested_tags:
          type: array
          items:
            $ref: '#/components/schemas/TagInfo'
          description: Recommended TAGs for the file
        file_metadata:
          $ref: '#/components/schemas/FileMetadata'
        parsing_info:
          $ref: '#/components/schemas/ParsingInfo'

    TagInfo:
      type: object
      properties:
        tag:
          type: string
          description: TAG identifier (e.g., @REQ:CODE-TAG-002)
          pattern: '^@(REQ|DESIGN|TASK|VISION|STRUCT|TECH|ADR|FEATURE|API|TEST|DATA|PERF|SEC|DEBT|TODO):[A-Z0-9_-]+$'
        category:
          type: string
          enum: [SPEC, STEERING, IMPLEMENTATION, QUALITY]
          description: TAG category classification
        line_number:
          type: integer
          minimum: 1
          description: Line number where TAG is located
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Confidence score for suggested TAGs
        description:
          type: string
          description: Human-readable TAG description
        auto_generated:
          type: boolean
          description: Whether TAG was auto-generated

    FileMetadata:
      type: object
      properties:
        size_bytes:
          type: integer
          description: File size in bytes
        line_count:
          type: integer
          description: Total number of lines
        function_count:
          type: integer
          description: Number of functions defined
        class_count:
          type: integer
          description: Number of classes defined
        complexity_score:
          type: number
          description: Cyclomatic complexity score
        last_modified:
          type: string
          format: date-time
          description: File last modification timestamp

    ParsingInfo:
      type: object
      properties:
        parser_used:
          type: string
          enum: [libcst, tree_sitter, ast]
          description: Parser library used for analysis
        parse_time_ms:
          type: integer
          description: Time taken to parse file in milliseconds
        syntax_errors:
          type: array
          items:
            type: string
          description: List of syntax errors found
        warnings:
          type: array
          items:
            type: string
          description: Parsing warnings generated

    TagSuggestionRequest:
      type: object
      required:
        - file_path
      properties:
        file_path:
          type: string
          description: Path to file for TAG suggestion
        file_content:
          type: string
          description: File content (if not reading from disk)
        context:
          type: object
          properties:
            module_path:
              type: string
              description: Python module path
            project_type:
              type: string
              enum: [core, api, cli, agent, test, util]
              description: Project component type

    TagSuggestionResponse:
      type: object
      properties:
        file_path:
          type: string
          description: Path to analyzed file
        suggested_tags:
          type: array
          items:
            $ref: '#/components/schemas/TagInfo'
        reasoning:
          type: array
          items:
            type: object
            properties:
              tag:
                type: string
              reason:
                type: string
              evidence:
                type: array
                items:
                  type: string

    ScanStatusResponse:
      type: object
      properties:
        scan_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [queued, in_progress, completed, failed, cancelled]
        progress_percentage:
          type: number
          minimum: 0.0
          maximum: 100.0
        current_file:
          type: string
          description: Currently processing file
        processed_files:
          type: integer
        total_files:
          type: integer
        estimated_completion:
          type: string
          format: date-time
          description: Estimated completion time
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ScanError'

    ScanError:
      type: object
      properties:
        file_path:
          type: string
        error_type:
          type: string
          enum: [syntax_error, permission_error, file_not_found, parsing_error]
        error_message:
          type: string
        line_number:
          type: integer
        suggested_fix:
          type: string

    PerformanceMetrics:
      type: object
      properties:
        total_duration_ms:
          type: integer
        average_file_time_ms:
          type: number
        memory_usage_mb:
          type: number
        cpu_usage_percent:
          type: number
        throughput_files_per_second:
          type: number

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
            timestamp:
              type: string
              format: date-time

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []

tags:
  - name: scanning
    description: File and directory scanning operations
  - name: suggestions
    description: TAG suggestion and recommendation
  - name: monitoring
    description: Scan progress and status monitoring