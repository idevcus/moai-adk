# 상태 관리 계약 정의 @TASK:STATE-MGMT

## 마법사 세션 상태 관리 인터페이스

### 세션 생명주기 상태
```yaml
session_lifecycle:
  states:
    INITIALIZING:
      description: "세션 초기화 중"
      allowed_transitions: ["ACTIVE", "ERROR"]
      timeout_ms: 5000

    ACTIVE:
      description: "활성 진행 중"
      allowed_transitions: ["PAUSED", "COMPLETING", "ABANDONED", "ERROR"]
      auto_save_interval_ms: 30000

    PAUSED:
      description: "일시 중지됨"
      allowed_transitions: ["ACTIVE", "ABANDONED"]
      max_pause_duration_hours: 24

    COMPLETING:
      description: "완료 처리 중"
      allowed_transitions: ["COMPLETED", "ERROR"]
      timeout_ms: 60000

    COMPLETED:
      description: "성공적으로 완료"
      allowed_transitions: []
      retention_days: 30

    ABANDONED:
      description: "사용자가 중단"
      allowed_transitions: ["ACTIVE"]
      retention_days: 7

    ERROR:
      description: "오류 발생"
      allowed_transitions: ["ACTIVE", "ABANDONED"]
      auto_recovery_attempts: 3
```

### 단계별 상태 관리
```yaml
step_state_management:
  step_status:
    NOT_STARTED:
      description: "아직 시작하지 않음"
      ui_indicator: "⏳"
      can_access: false

    IN_PROGRESS:
      description: "현재 진행 중"
      ui_indicator: "🔄"
      can_access: true
      auto_save: true

    VALIDATING:
      description: "입력 검증 중"
      ui_indicator: "🔍"
      can_access: false
      timeout_ms: 5000

    COMPLETED:
      description: "완료됨"
      ui_indicator: "✅"
      can_access: true
      immutable: true

    ERROR:
      description: "오류 발생"
      ui_indicator: "❌"
      can_access: true
      retry_enabled: true

    SKIPPED:
      description: "조건부 건너뜀"
      ui_indicator: "⏭️"
      can_access: false
      auto_generated: true

  step_data_structure:
    step_number: "integer (1-20)"
    question_id: "string (Q1_PROBLEM 형식)"
    status: "enum(step_status)"
    user_answer: "any (string|array|object)"
    validation_result: "ValidationResult object"
    started_at: "ISO 8601 timestamp"
    completed_at: "ISO 8601 timestamp|null"
    duration_ms: "integer"
    retry_count: "integer (default: 0)"
    metadata:
      keywords_detected: "array of strings"
      dynamic_questions_triggered: "array of strings"
      user_agent: "string"
      client_info: "object"
```

### 데이터 영속성 계약
```yaml
persistence_contract:
  storage_locations:
    primary: ".moai/indexes/state.json"
    backup: ".moai/indexes/state_backup.json"
    archive: ".moai/archives/completed_sessions/"

  storage_format:
    encoding: "UTF-8"
    format: "JSON"
    compression: "gzip (for archives)"
    encryption: "optional (for sensitive data)"

  data_schema:
    session_root:
      session_id: "UUID v4"
      user_id: "string"
      wizard_version: "semver string"
      started_at: "ISO 8601"
      last_activity: "ISO 8601"
      status: "session_lifecycle.states"
      current_step: "integer (0-20)"
      total_steps: "integer (default: 10)"

    answers_object:
      structure: "flat key-value pairs"
      naming_convention: "Q{step}_{category}_{field}"
      examples:
        - "Q1_problem_definition: string"
        - "Q2_target_users: array"
        - "Q3_success_metrics: object"

    metadata_object:
      platform: "string (windows|macos|linux)"
      claude_code_version: "semver string"
      project_directory: "absolute path"
      environment_variables: "filtered object"
      performance_metrics: "PerformanceMetrics object"

  backup_strategy:
    frequency: "every state change"
    retention: "last 10 versions"
    rotation: "daily archive creation"
    verification: "checksum validation"
```

### 동시성 및 충돌 해결
```yaml
concurrency_control:
  locking_mechanism:
    type: "file-based advisory locking"
    lock_file: ".moai/indexes/.state.lock"
    timeout_ms: 5000
    retry_interval_ms: 100

  conflict_resolution:
    same_session_multiple_instances:
      strategy: "last-writer-wins with timestamp"
      warning_threshold_ms: 1000

    concurrent_step_modifications:
      strategy: "atomic step updates"
      rollback_on_failure: true

    version_conflicts:
      strategy: "merge with conflict markers"
      manual_resolution_required: true

  state_validation:
    integrity_checks:
      - "session_id uniqueness"
      - "step progression logic"
      - "timestamp consistency"
      - "answer data type validation"

    auto_repair:
      enabled: true
      max_attempts: 3
      fallback_to_backup: true
```

### 에러 처리 및 복구
```yaml
error_handling:
  error_categories:
    STORAGE_ERROR:
      description: "파일 시스템 오류"
      recovery_actions:
        - "retry with exponential backoff"
        - "switch to backup location"
        - "create new session"
      user_message: "세션 저장 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요."

    VALIDATION_ERROR:
      description: "데이터 검증 실패"
      recovery_actions:
        - "restore previous valid state"
        - "prompt user for correction"
        - "apply default values"
      user_message: "입력 데이터에 문제가 있습니다. 확인 후 다시 입력해주세요."

    CORRUPTION_ERROR:
      description: "상태 파일 손상"
      recovery_actions:
        - "attempt automatic repair"
        - "restore from backup"
        - "create fresh session"
      user_message: "세션 데이터가 손상되었습니다. 이전 상태로 복구하거나 새로 시작할 수 있습니다."

    TIMEOUT_ERROR:
      description: "응답 시간 초과"
      recovery_actions:
        - "extend timeout"
        - "simplify operation"
        - "break into smaller steps"
      user_message: "처리 시간이 오래 걸리고 있습니다. 계속 기다리시겠습니까?"

  recovery_procedures:
    auto_recovery:
      enabled: true
      max_attempts: 3
      escalation_policy: "fallback to manual recovery"

    manual_recovery:
      available_actions:
        - "restore from specific backup"
        - "edit state manually"
        - "restart from specific step"
        - "create new session"

    data_migration:
      version_compatibility_check: true
      automatic_schema_update: true
      rollback_capability: true
```

### 성능 최적화 계약
```yaml
performance_optimization:
  caching_strategy:
    step_definitions:
      cache_type: "in-memory"
      cache_duration: "session lifetime"
      invalidation_trigger: "wizard version change"

    validation_rules:
      cache_type: "persistent disk cache"
      cache_duration: "24 hours"
      cache_size_limit: "10MB"

    user_preferences:
      cache_type: "in-memory with disk persistence"
      cache_duration: "7 days"
      sync_interval: "on session end"

  lazy_loading:
    step_content:
      enabled: true
      preload_next_steps: 2
      background_loading: true

    dynamic_questions:
      on_demand_generation: true
      cache_generated_content: true

    validation_resources:
      load_on_first_use: true
      release_after_step_completion: true

  memory_management:
    garbage_collection:
      trigger_threshold: "70% of allocated memory"
      aggressive_cleanup_on_error: true

    object_pooling:
      validation_objects: true
      ui_components: true
      state_snapshots: false

    memory_limits:
      max_session_size_mb: 50
      max_cache_size_mb: 100
      warning_threshold_mb: 30

  disk_io_optimization:
    batch_operations:
      enabled: true
      batch_size: 5
      flush_interval_ms: 1000

    compression:
      archive_compression: "gzip level 6"
      live_data_compression: false

    async_operations:
      background_saves: true
      non_blocking_backups: true

  network_optimization:
    request_batching:
      enabled: false  # local-only wizard

    timeout_configuration:
      connection_timeout_ms: 5000
      read_timeout_ms: 10000
      retry_attempts: 3
```

### 모니터링 및 관찰성
```yaml
monitoring_contract:
  metrics_collection:
    session_metrics:
      - "sessions_started_total"
      - "sessions_completed_total"
      - "sessions_abandoned_total"
      - "session_duration_seconds"
      - "steps_completed_per_session"

    performance_metrics:
      - "step_transition_duration_ms"
      - "validation_duration_ms"
      - "save_operation_duration_ms"
      - "memory_usage_mb"
      - "disk_usage_mb"

    error_metrics:
      - "errors_total_by_type"
      - "recovery_attempts_total"
      - "recovery_success_rate"
      - "data_corruption_incidents"

  logging_contract:
    log_levels:
      ERROR: "critical failures requiring immediate attention"
      WARN: "recoverable issues that may affect user experience"
      INFO: "normal operational events"
      DEBUG: "detailed state transitions and validation steps"

    log_format:
      timestamp: "ISO 8601 with timezone"
      level: "string (ERROR|WARN|INFO|DEBUG)"
      session_id: "UUID for correlation"
      step_number: "current step context"
      message: "human readable description"
      metadata: "structured additional data"

    log_retention:
      error_logs: "30 days"
      info_logs: "7 days"
      debug_logs: "1 day"
      archive_policy: "compress and store for 90 days"

  alerting_rules:
    critical_alerts:
      - "error_rate > 5% in last 5 minutes"
      - "data_corruption_detected"
      - "disk_space < 100MB"

    warning_alerts:
      - "session_abandonment_rate > 30% in last hour"
      - "average_step_duration > 30 seconds"
      - "memory_usage > 80% of limit"

    notification_channels:
      - "structured logs to console"
      - "optional webhook for monitoring systems"
```

### 테스트 가능성 계약
```yaml
testability_contract:
  test_interfaces:
    state_injection:
      method: "load_test_state(session_data: dict)"
      purpose: "inject specific state for testing scenarios"

    state_inspection:
      method: "get_internal_state() -> dict"
      purpose: "inspect state for assertions"

    time_manipulation:
      method: "set_mock_time(timestamp: str)"
      purpose: "test timeout and time-based logic"

    error_simulation:
      method: "inject_error(error_type: str, step: int)"
      purpose: "test error handling and recovery"

  test_data_generation:
    session_factories:
      - "create_minimal_session()"
      - "create_complete_session()"
      - "create_corrupted_session()"
      - "create_abandoned_session()"

    step_factories:
      - "create_valid_step_data(step_number: int)"
      - "create_invalid_step_data(error_type: str)"
      - "create_dynamic_step_data(keywords: list)"

    state_builders:
      - "SessionBuilder().with_step(n).build()"
      - "ErrorScenarioBuilder().corrupt_step(n).build()"

  mocking_capabilities:
    file_system:
      mock_read_operations: true
      mock_write_operations: true
      simulate_disk_errors: true

    time_services:
      mock_current_time: true
      mock_elapsed_time: true
      accelerate_timeouts: true

    validation_services:
      mock_validation_results: true
      simulate_slow_validation: true
      inject_validation_errors: true
```

### 보안 고려사항
```yaml
security_contract:
  data_protection:
    sensitive_data_handling:
      - "never log user input containing potential secrets"
      - "redact email addresses in logs"
      - "mask personal information in error messages"

    file_permissions:
      state_files: "owner read/write only (600)"
      backup_files: "owner read/write only (600)"
      lock_files: "owner read/write only (600)"

    input_sanitization:
      path_traversal_prevention: true
      script_injection_prevention: true
      size_limits_enforcement: true

  access_control:
    session_isolation:
      - "sessions accessible only by creating user"
      - "no cross-session data leakage"
      - "secure session ID generation"

    file_access:
      - "restricted to project directory"
      - "no access to system files"
      - "validate all file paths"

  audit_logging:
    security_events:
      - "invalid session access attempts"
      - "file permission errors"
      - "suspicious input patterns"
      - "unauthorized state modifications"

    compliance_logging:
      - "data access events"
      - "state modification events"
      - "error and recovery events"
```

---

## 🔗 연관 태그 시스템

**@TASK:STATE-MGMT**와 연결된 주요 태그들:
- **@REQ:WIZARD-UX-001** → 요구사항 추적
- **@DATA:WIZARD-UX** → 데이터 모델 연결
- **@DESIGN:WIZARD-UX** → 아키텍처 설계 연결
- **@TEST:STATE-VALIDATION** → 상태 관리 테스트
- **@SEC:DATA-PROTECTION** → 보안 요구사항

---

> **@TASK:STATE-MGMT**를 통해 마법사의 모든 상태 변화가 안전하고 일관되게 관리됩니다.
>
> **영속성, 동시성, 에러 복구를 포괄하는 완전한 상태 관리 시스템입니다.**