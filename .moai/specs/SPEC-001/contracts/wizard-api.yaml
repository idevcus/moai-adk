openapi: 3.0.3
info:
  title: MoAI Wizard API
  description: |
    마법사 UX 시스템 내부 API 계약 정의

    3-컴포넌트 아키텍처:
    - WizardCore: 상태 관리 및 검증
    - UIRenderer: 터미널 UI 렌더링
    - QuestionEngine: 질문 생성 및 관리
  version: 1.0.0
  contact:
    name: MoAI-ADK Team
    url: https://github.com/moai-adk/moai-adk

servers:
  - url: http://localhost:8080
    description: 로컬 개발 환경

tags:
  - name: wizard-core
    description: 마법사 핵심 상태 관리
  - name: ui-renderer
    description: 터미널 UI 렌더링
  - name: question-engine
    description: 질문 생성 및 관리
  - name: validation
    description: 입력 검증 시스템

paths:
  /wizard/session:
    post:
      tags: [wizard-core]
      summary: 새로운 마법사 세션 시작
      description: |
        새 마법사 세션을 초기화하고 세션 ID를 반환합니다.
        사용자 정보와 환경 설정을 기반으로 맞춤형 질문을 준비합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionCreateRequest'
            examples:
              basic_session:
                summary: 기본 세션 생성
                value:
                  user_id: "dev_user_001"
                  platform: "macOS"
                  claude_code_version: "1.0.0"
                  preferences:
                    language: "ko"
                    theme: "dark"
      responses:
        '201':
          description: 세션 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
              examples:
                success:
                  value:
                    session_id: "550e8400-e29b-41d4-a716-446655440000"
                    status: "active"
                    current_step: 0
                    total_steps: 10
                    started_at: "2025-01-20T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'

  /wizard/session/{session_id}:
    get:
      tags: [wizard-core]
      summary: 세션 상태 조회
      parameters:
        - $ref: '#/components/parameters/SessionId'
      responses:
        '200':
          description: 세션 상태
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WizardSession'
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      tags: [wizard-core]
      summary: 세션 상태 업데이트
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionUpdateRequest'
      responses:
        '200':
          description: 업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WizardSession'

  /wizard/session/{session_id}/step:
    post:
      tags: [wizard-core]
      summary: 다음 단계로 진행
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepAdvanceRequest'
            examples:
              text_answer:
                summary: 텍스트 답변 제출
                value:
                  answer: "AI 기반 코드 리뷰 자동화 도구"
                  step_duration_ms: 15000
              choice_answer:
                summary: 선택형 답변 제출
                value:
                  answer: "web_application"
                  step_duration_ms: 5000
      responses:
        '200':
          description: 단계 진행 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepAdvanceResponse'
        '400':
          description: 검증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /wizard/session/{session_id}/validate:
    post:
      tags: [validation]
      summary: 입력 검증
      description: |
        사용자 입력을 검증하고 결과를 반환합니다.
        실제 저장하지 않고 검증만 수행합니다.
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        '200':
          description: 검증 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'

  /wizard/ui/render/progress:
    post:
      tags: [ui-renderer]
      summary: 진행바 렌더링
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgressRenderRequest'
      responses:
        '200':
          description: 렌더링된 진행바
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderResult'

  /wizard/ui/render/question:
    post:
      tags: [ui-renderer]
      summary: 질문 UI 렌더링
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRenderRequest'
      responses:
        '200':
          description: 렌더링된 질문 UI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderResult'

  /wizard/ui/render/summary:
    post:
      tags: [ui-renderer]
      summary: 설정 요약 렌더링
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummaryRenderRequest'
      responses:
        '200':
          description: 렌더링된 요약
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderResult'

  /wizard/questions/{step}:
    get:
      tags: [question-engine]
      summary: 특정 단계 질문 조회
      parameters:
        - name: step
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 20
      responses:
        '200':
          description: 질문 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'

  /wizard/questions/dynamic:
    post:
      tags: [question-engine]
      summary: 동적 질문 생성
      description: |
        사용자의 이전 답변을 분석하여
        컨텍스트에 맞는 동적 질문을 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicQuestionRequest'
      responses:
        '200':
          description: 생성된 동적 질문들
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicQuestionResponse'

  /wizard/questions/keywords:
    post:
      tags: [question-engine]
      summary: 키워드 감지 및 분석
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeywordDetectionRequest'
      responses:
        '200':
          description: 키워드 감지 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordDetectionResult'

components:
  parameters:
    SessionId:
      name: session_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      example: "550e8400-e29b-41d4-a716-446655440000"

  schemas:
    SessionCreateRequest:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: string
          description: 사용자 식별자
          example: "dev_user_001"
        platform:
          type: string
          enum: [windows, macos, linux]
          example: "macos"
        claude_code_version:
          type: string
          pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
          example: "1.0.0"
        preferences:
          type: object
          properties:
            language:
              type: string
              enum: [ko, en]
              default: ko
            theme:
              type: string
              enum: [light, dark]
              default: dark

    SessionResponse:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [active, completed, abandoned, error]
        current_step:
          type: integer
          minimum: 0
          maximum: 20
        total_steps:
          type: integer
          default: 10
        started_at:
          type: string
          format: date-time

    WizardSession:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
        user_id:
          type: string
        current_step:
          type: integer
          minimum: 0
          maximum: 20
        total_steps:
          type: integer
        status:
          type: string
          enum: [active, completed, abandoned, error]
        started_at:
          type: string
          format: date-time
        last_activity:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
        answers:
          type: object
          additionalProperties: true
        dynamic_questions:
          type: array
          items:
            type: string
        wizard_version:
          type: string
          default: "1.0.0"

    SessionUpdateRequest:
      type: object
      properties:
        status:
          type: string
          enum: [active, completed, abandoned, error]
        answers:
          type: object
          additionalProperties: true

    StepAdvanceRequest:
      type: object
      required:
        - answer
      properties:
        answer:
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: array
              items:
                type: string
        step_duration_ms:
          type: number
          minimum: 0
          description: 사용자가 이 단계에 소요한 시간

    StepAdvanceResponse:
      type: object
      properties:
        success:
          type: boolean
        next_step:
          type: integer
        validation_result:
          $ref: '#/components/schemas/ValidationResult'
        generated_questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'

    ValidationRequest:
      type: object
      required:
        - input
        - step
      properties:
        input:
          type: string
          maxLength: 2000
        step:
          type: integer
          minimum: 1
          maximum: 20
        validation_type:
          type: string
          enum: [text, choice, number, email, url]

    ValidationResult:
      type: object
      properties:
        is_valid:
          type: boolean
        error_message:
          type: string
          nullable: true
        error_code:
          type: string
          nullable: true
        suggestions:
          type: array
          items:
            type: string
        validation_time_ms:
          type: number
        retry_count:
          type: integer
          default: 0
        security_flags:
          type: array
          items:
            type: string
        sanitized_input:
          type: string
          nullable: true

    ValidationError:
      type: object
      properties:
        error:
          type: string
        details:
          $ref: '#/components/schemas/ValidationResult'

    ProgressRenderRequest:
      type: object
      required:
        - current_step
        - total_steps
      properties:
        current_step:
          type: integer
          minimum: 0
        total_steps:
          type: integer
          minimum: 1
        title:
          type: string
        config:
          $ref: '#/components/schemas/RenderConfig'

    QuestionRenderRequest:
      type: object
      required:
        - question
      properties:
        question:
          $ref: '#/components/schemas/Question'
        progress:
          $ref: '#/components/schemas/ProgressState'
        config:
          $ref: '#/components/schemas/RenderConfig'

    SummaryRenderRequest:
      type: object
      required:
        - answers
      properties:
        answers:
          type: object
          additionalProperties: true
        session:
          $ref: '#/components/schemas/WizardSession'
        config:
          $ref: '#/components/schemas/RenderConfig'

    RenderConfig:
      type: object
      properties:
        primary_color:
          type: string
          default: "#00ff00"
        secondary_color:
          type: string
          default: "#ffff00"
        error_color:
          type: string
          default: "#ff0000"
        console_width:
          type: integer
          minimum: 40
          maximum: 120
          default: 80
        panel_padding:
          type: integer
          minimum: 0
          maximum: 3
          default: 1
        high_contrast:
          type: boolean
          default: false

    RenderResult:
      type: object
      properties:
        rendered_content:
          type: string
          description: 렌더링된 Rich 마크업 문자열
        render_time_ms:
          type: number
        panel_type:
          type: string
          enum: [progress, question, summary, error]

    Question:
      type: object
      required:
        - question_id
        - step_number
        - text
        - answer_type
      properties:
        question_id:
          type: string
          maxLength: 50
        step_number:
          type: integer
          minimum: 1
          maximum: 20
        category:
          type: string
          enum: [basic, dynamic, conditional]
          default: basic
        text:
          type: string
          minLength: 10
          maxLength: 300
        description:
          type: string
          maxLength: 500
        examples:
          type: array
          items:
            type: string
          maxItems: 5
        answer_type:
          type: string
          enum: [text, single_choice, multiple_choice, number, boolean]
        choices:
          type: array
          items:
            type: string
          nullable: true
        validation_rules:
          type: object
          additionalProperties: true
        trigger_keywords:
          type: array
          items:
            type: string

    DynamicQuestionRequest:
      type: object
      required:
        - session_id
        - current_answers
      properties:
        session_id:
          type: string
          format: uuid
        current_answers:
          type: object
          additionalProperties: true
        detected_keywords:
          type: array
          items:
            type: string

    DynamicQuestionResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        total_questions_added:
          type: integer
        estimated_additional_time_min:
          type: number

    KeywordDetectionRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          minLength: 1
          maxLength: 1000
        context:
          type: object
          additionalProperties: true

    KeywordDetectionResult:
      type: object
      properties:
        detected_keywords:
          type: array
          items:
            type: string
        confidence_scores:
          type: object
          additionalProperties:
            type: number
            minimum: 0
            maximum: 1
        suggested_questions:
          type: array
          items:
            type: string
        ai_ml_detected:
          type: boolean
        security_context:
          type: boolean
        performance_critical:
          type: boolean

    ProgressState:
      type: object
      properties:
        current_step:
          type: integer
          minimum: 0
          maximum: 20
        total_steps:
          type: integer
          default: 10
        percentage:
          type: number
          minimum: 0
          maximum: 100
        completed_steps:
          type: array
          items:
            type: integer
        current_step_title:
          type: string
        estimated_remaining_time:
          type: integer
          nullable: true

  responses:
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
              details:
                type: object

    NotFound:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "session_not_found"
              message:
                type: string
                example: "세션을 찾을 수 없습니다"

    InternalServerError:
      description: 서버 내부 오류
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
              trace_id:
                type: string

  securitySchemes:
    SessionAuth:
      type: apiKey
      in: header
      name: X-Session-ID
      description: 마법사 세션 식별자

security:
  - SessionAuth: []