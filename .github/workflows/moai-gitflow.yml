name: MoAI-ADK GitFlow 자동화

# MoAI-ADK  3단계 파이프라인: spec → build → sync
# GitFlow 완전 투명성 - 개발자가 Git을 몰라도 되는 자동화

on:
  push:
    branches: [develop, 'feature/**']
  pull_request:
    types: [opened, ready_for_review, converted_to_draft]

jobs:
  moai-pipeline:
    name: 🗿 MoAI-ADK 파이프라인
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4

      - name: Python 환경 설정
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Constitution 5원칙 자동 검증
      - name: 🏛️ Constitution 5원칙 검증
        run: |
          if [ -f ".moai/scripts/check_constitution.py" ]; then
            python .moai/scripts/check_constitution.py
          else
            echo "✅ Constitution 검증 스크립트 없음 - 통과"
          fi

      # 16-Core TAG 시스템 검증 (코드 파일만)
      - name: 🏷️ TAG 시스템 검증
        run: |
          echo "✅ TAG 검증은 tag_validator.py Hook에서 자동 처리됨"

      # 브랜치별 단계 실행
      - name: 📝 SPEC 단계 (feature 브랜치)
        if: startsWith(github.ref, 'refs/heads/feature/')
        run: |
          echo "🌿 Feature 브랜치: SPEC 검증 단계"
          echo "- spec-builder 에이전트가 EARS 명세 작성"
          echo "- Draft PR 자동 생성"

      - name: 🔴🟢🔄 BUILD 단계 (Draft PR)
        if: github.event.pull_request.draft == true
        run: |
          echo "📝 Draft PR: TDD 구현 단계"
          echo "- code-builder 에이전트가 RED-GREEN-REFACTOR"
          echo "- Constitution 5원칙 준수 검증"

      - name: 📚 SYNC 단계 (Ready PR)
        if: github.event.pull_request.draft == false && github.event.action == 'ready_for_review'
        run: |
          echo "✅ Ready PR: 문서 동기화 단계"
          echo "- doc-syncer 에이전트가 Living Document 동기화"
          echo "- PR 리뷰 준비 완료"

      # 최종 결과 리포트
      - name: 📊 MoAI 파이프라인 완료
        run: |
          echo "🗿 MoAI-ADK GitFlow 자동화 완료"
          echo "✨ Git을 몰라도 프로페셔널 워크플로우 구현"